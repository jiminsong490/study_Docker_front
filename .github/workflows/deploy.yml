name: deploy

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-18.04

        strategy:
            matrix:
                node-version: [16.15.1]

        steps:
            - name: Checkout source code.
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Check Npm -v
              run: npm -v

            - name: create env file
              working-directory: ./
              run: |
                  pwd
                  touch .env

            # - name: make directory
            #   run: |
            #       mkdir -p test

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-build-
                      ${{ runner.OS }}-

            - name: Install Dependencies
              run: npm install

            - name: Build
              run: npm run build

            - name: zip file
              run: zip -r test.zip ./build ./appspec.yml

            - name: AWS configure credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-northeast-2

            - name: upload to S3
              run: |
                  aws s3 cp --region ap-northeast-2 ./test.zip s3://dockerdistributetestjimin/test/test.zip

            - name: deploy with AWS codeDeploy
              run: aws deploy create-deployment
                  --application-name codedeploy_role
                  --deployment-config-name CodeDeployDefault.AllAtOnce
                  --deployment-group-name study_docker_web_group
                  --s3-location bucket=dockerdistributetestjimin,bundleType=zip,key=test/test.zip
# test
